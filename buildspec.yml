version: 0.2

env:
  variables:
    TF_VERSION: "1.7.5"
    TF_PATH: "/usr/local/bin"
    TF_STATE_BUCKET: "your-terraform-state-bucket-name"       # Replace with your actual S3 bucket
    TF_STATE_LOCK_TABLE: "your-terraform-state-lock-table"     # Replace with your actual DynamoDB table
    ENV_NAME: "dev"                                            # Used for the S3 key path

phases:
  install:
    commands:
      - echo "Installing Terraform CLI version ${TF_VERSION}..."
      - curl -sS -o terraform.zip "https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip"
      - unzip -o terraform.zip -d "${TF_PATH}"
      - rm terraform.zip
      - chmod +x "${TF_PATH}/terraform"
      - echo "Terraform version:"
      - terraform version
      - echo "Checking AWS CLI version..."
      - aws --version
      - echo "Build region is: $AWS_REGION"

  pre_build:
    commands:
      - echo "Switching to Terraform directory (assuming main.tf is in root)..."
      # If your Terraform code is in a subdirectory, use: cd terraform/
      - echo "Initializing Terraform with S3 backend..."
      - terraform init \
          -backend-config="bucket=${TF_STATE_BUCKET}" \
          -backend-config="key=${ENV_NAME}/terraform.tfstate" \
          -backend-config="dynamodb_table=${TF_STATE_LOCK_TABLE}" \
          -backend-config="region=${AWS_REGION}" \
          -reconfigure

  build:
    commands:
      - echo "Validating Terraform configuration..."
      - terraform validate
      - echo "Generating Terraform execution plan..."
      - terraform plan -lock=true -out=tfplan.out
      - echo "Applying Terraform plan..."
      - terraform apply -lock=true -auto-approve tfplan.out

  post_build:
    commands:
      - echo "Terraform deployment complete."
      - |
        echo "Fetching output values..."
        terraform output -raw eks_cluster_name_output || echo "Output 'eks_cluster_name_output' not found."
        terraform output -raw db_endpoint_address || echo "Output 'db_endpoint_address' not found."
